{"name": "TESTE", "date": "2024-01-18", "url": "https://michelleamesquita.medium.com/how-we-can-create-a-secure-pipeline-43fc5a3e5946", "fname_tool": "SAST", "critical": "0", "high": "2", "med": "3", "comp_select0": "48", "fname_detail0": "O aplicativo cria páginas da Web que incluem dados não confiáveis, seja no input, do banco de dados do aplicativo ou de outras fontes externas.Os dados são usados diretamente no HTML da página.Isso pode ser visto no código da aba abaixo.", "fname_remediation0": "Codifique totalmente todos os dados dinâmicos, independentemente da fonte, antes de incorporá-los na saída. A codificação deve ser sensível ao contexto. Por exemplo:      Codificação HTML para conteúdo HTML     Codificação de atributo HTML para saída de dados para valores de atributo     Codificação JavaScript para JavaScript gerado pelo servidor. Exemplo: <div id=divElem ></div>  <script> var divElemText = document.getElementById('divElem').innerText;  trustedFunction(divElemText); </script>", "fname_vuln0": "CLIENT CODE INJECTION", "fname_reference0": "https://owasp.org/www-community/attacks/Code_Injection", "fname_class0": "High", "qtd0": "2", "comp_select2": "40", "fname_detail1": "A aplicação não impede que entradas maliciosas sejam inseridas nos cookies da aplicação. Um invasor pode influenciar o navegador da vítima com parâmetros de URL maliciosos, fazendo com que o script carregue esses valores maliciosos no cookie do usuário. Isso pode ser via phishing, links armazenados, links externos e muito mais.Isso pode ser visto no código da aba abaixo.", "fname_remediation1": "Não defina cookies utilizando fragmentos da URL, parâmetros GET ou input.function setCookie(){    var value = window.location.hash;        if (actionsArray')('value')') != undefined)    {        var date = new Date();        date.setTime(date.getTime() + 1000('60('20);       document.cookie = 'ActionID=' + actionsArray')('value')') + '; expires=' + date.toUTCString() + '; path=/myApp/' + '; secure;'     }}", "fname_vuln1": "CLIENT DOM COOKIE POISONING", "fname_reference1": "https://owasp.org/www-community/attacks/Session_hijacking_attack", "fname_class1": "Medium", "qtd1": "1", "comp_select4": "49", "fname_detail2": "A aplicação armazena dados, que podem conter PII (Informações Pessoais Identificáveis), no navegador ou dispositivo do cliente. O aplicativo usa formas inseguras de armazenamento, que não fornecem inerentemente nenhuma proteção contra acesso não autorizado. Esses dados não são criptografados ou higienizados antes de serem armazenados, portanto, uma entidade maliciosa com acesso ao dispositivo ou navegador pode facilmente recuperar os dados do usuário.Isso pode ser visto no código da aba abaixo no método setItem().", "fname_remediation2": "Evite armazenar dados confidenciais, como PII, em clientes desprotegidos. Se PII ou outros dados confidenciais precisarem ser armazenados no cliente, certifique-se de que estejam criptografados ou protegidos de outra forma. Exemplo: var globalAccountId;   function storeUserData() {  \tvar accountId = getUserAccount(); \tglobalAccountId = accountId; // Data is stored in DOM, but not persistently }", "fname_vuln2": " CLIENT HTML5 STORE SENSITIVE DATA WEB IN STORAGE", "fname_reference2": "https://cheatsheetseries.owasp.org/cheatsheets/HTML5_Security_Cheat_Sheet.html", "fname_class2": "High", "qtd2": "9", "op": "Generate CSV"}