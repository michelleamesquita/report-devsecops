,Name,Date,Vulnerability,Detail,Remediation
0,test-pipe,2022-10-12,CONNECTION STRING INJECTION ,"A vulnerabilidade String Injection ocorre quando a aplicação constrói dinamicamente uma conexão. Essa conexão pode ser alterada pelo atacante e injetar código malicioso no input, caso esse parâmetro não seja corretamente validado ou que os caracteres não escapem. Assim, um atacante poderia acessar um dado sensível ou mesmo, algum recurso do servidor, visto que seria onde essa aplicação estaria inicializada.     Na imagem abaixo, temos um exemplo da matrícula da aplicação ATICA, identificada pela ferramenta Checkmarx, onde encontramos a vulnerabilidade descrita anteriormente.","A prevenção da vulnerabilidade Connection String Injection envolve alguns fatores: •	Evitar a construção dinâmica de conexões baseadas no uso de Strings nos inputs •	Permitir apenas que os usuários usem definições previamente definidas de conexões como uso de ENVs. •	Filtrar input utilizando Regex – para retornar exatamente o tipo de informação esperada pelo usuário. Por exemplo:  Assert.assertTrue(Pattern.matches(')('a-zA-Z0-9\\s\\-')'){1,50}, userInput))    Dessa forma, aqui temos um exemplo de como criar uma conexão:  ConnectionStringBuilder connectionStringBuilder = new ConnectionStringBuilder()       .setNamespaceName(\ EventHubsNamespaceName\ )       .setEventHubName( EventHubsEntityName )       .setSasKeyName( SharedAccessSignatureKeyName )       .setSasKey( SharedAccessSignatureKey )    string connString = connectionStringBuilder.build();"
1,,,XSS, https://insecure-website.com/status?message=<script>alert(1)</script> <script>alert(1)</script>,
